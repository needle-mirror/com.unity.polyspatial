#usda 1.0
(
    metersPerUnit = 1
    upAxis = "Y"
)

def "MaterialX"
{
    def "Materials"
    {
        def Material "USD_Matrix"
        {

            token outputs:mtlx:surface.connect = </MaterialX/Materials/USD_Matrix/UsdPreviewSurface.outputs:surface>
            token outputs:realitykit:vertex.connect = </MaterialX/Materials/USD_Matrix/GeometryModifier.outputs:vertex>

            def Shader "UsdPreviewSurface"
            {
                uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
                color3f inputs:diffuseColor = (0.5, 0.5, 0.5)
                float inputs:metallic = 0
                color3f inputs:emissiveColor = (0, 0, 0)
                float inputs:occlusion = 1
                int inputs:useSpecularWorkflow = 0
                color3f inputs:specularColor = (0.5, 0.5, 0.5)
                float inputs:roughness.connect = </MaterialX/Materials/USD_Matrix/SR_Matrix_roughness_OnesComplement.outputs:out>
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.01
                float inputs:opacity = 1
                float inputs:opacityThreshold = 0
                float inputs:ior = 1.4
                token outputs:surface
            }

            def Shader "GeometryModifier"
            {
                uniform token info:id = "ND_realitykit_geometrymodifier_vertexshader"
                float3 inputs:modelPositionOffset.connect = </MaterialX/Materials/USD_Matrix/SR_MatrixVertex_modelPositionOffset_SubtractPosition.outputs:out>
                token outputs:vertex
            }

            def Shader "SR_Matrix_roughness_OnesComplement"
            {
                uniform token info:id = "ND_subtract_float"
                float inputs:in1 = 1
                float inputs:in2 = 0.5
                float outputs:out
            }

            def Shader "SR_MatrixVertex_modelPositionOffset_SubtractPosition"
            {
                uniform token info:id = "ND_subtract_vector3"
                float3 inputs:in2.connect = </MaterialX/Materials/USD_Matrix/SR_MatrixVertex_modelPositionOffset_Position.outputs:out>
                float3 inputs:in1.connect = </MaterialX/Materials/USD_Matrix/CastSwizzleFromMultiplyNode_93a4700a498545e49d6ec8dbf4e6a195ToSR_MatrixVertex_modelPositionOffset_SubtractPositionin1.outputs:out>
                float3 outputs:out
            }

            def Shader "SR_MatrixVertex_modelPositionOffset_Position"
            {
                uniform token info:id = "ND_position_vector3"
                string inputs:space = "object"
                float3 outputs:out
            }

            def Shader "CastSwizzleFromMultiplyNode_93a4700a498545e49d6ec8dbf4e6a195ToSR_MatrixVertex_modelPositionOffset_SubtractPositionin1"
            {
                uniform token info:id = "ND_swizzle_vector4_vector3"
                float4 inputs:in.connect = </MaterialX/Materials/USD_Matrix/MultiplyNode_93a4700a498545e49d6ec8dbf4e6a195.outputs:out>
                string inputs:channels = "xyz"
                float3 outputs:out
            }

            def Shader "MultiplyNode_93a4700a498545e49d6ec8dbf4e6a195"
            {
                uniform token info:id = "ND_transformmatrix_vector4"
                matrix4d inputs:mat.connect = </MaterialX/Materials/USD_Matrix/TransformViewProjectionInverse.outputs:out>
                float4 inputs:in.connect = </MaterialX/Materials/USD_Matrix/Vector4Node_f490c91f9b2040c0ac2f02cc1ab9f90e.outputs:out>
                float4 outputs:out
            }

            def Shader "TransformViewProjectionInverse"
            {
                uniform token info:id = "ND_invertmatrix_matrix44"
                matrix4d inputs:in.connect = </MaterialX/Materials/USD_Matrix/TransformViewProjection.outputs:out>
                matrix4d outputs:out
            }

            def Shader "TransformViewProjection"
            {
                uniform token info:id = "ND_multiply_matrix44"
                matrix4d inputs:in1.connect = </MaterialX/Materials/USD_Matrix/TransformViewNode_7780a58ea00644f7be6a295a348a1d6c.outputs:worldToView>
                matrix4d inputs:in2.connect = </MaterialX/Materials/USD_Matrix/TransformProjectionNode_7780a58ea00644f7be6a295a348a1d6c.outputs:viewToProjection>
                matrix4d outputs:out
            }

            def Shader "TransformViewNode_7780a58ea00644f7be6a295a348a1d6c"
            {
                uniform token info:id = "ND_realitykit_surface_world_to_view"
                matrix4d outputs:worldToView
            }

            def Shader "Vector4Node_f490c91f9b2040c0ac2f02cc1ab9f90e"
            {
                uniform token info:id = "ND_combine4_vector4"
                float inputs:in1 = 0
                float inputs:in2 = 0
                float inputs:in3 = 0
                float inputs:in4 = 1
                float4 outputs:out
            }

            def Shader "TransformProjectionNode_7780a58ea00644f7be6a295a348a1d6c"
            {
                uniform token info:id = "ND_realitykit_surface_view_to_projection"
                matrix4d outputs:viewToProjection
            }
        }
    }
}
