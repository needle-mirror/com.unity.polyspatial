#usda 1.0
(
    metersPerUnit = 1
    upAxis = "Y"
)

def "MaterialX"
{
    def "Materials"
    {
        def Material "USD_Adjustment"
        {

            token outputs:mtlx:surface.connect = </MaterialX/Materials/USD_Adjustment/realitykit_unlit.outputs:out>
            token outputs:realitykit:vertex.connect = </MaterialX/Materials/USD_Adjustment/GeometryModifier.outputs:out>

            def Shader "realitykit_unlit"
            {
                uniform token info:id = "ND_realitykit_unlit_surfaceshader"
                bool inputs:applyPostProcessToneMap = 0
                color3f inputs:color.connect = </MaterialX/Materials/USD_Adjustment/CastSwizzleFromInvertColors_OutNode_5237ae5963fa42938c49854cd99f24deToSR_Adjustmentcolor.outputs:out>
                float inputs:opacity = 1
                token outputs:out
            }

            def Shader "GeometryModifier"
            {
                uniform token info:id = "ND_realitykit_geometrymodifier_vertexshader"
                token outputs:out
            }

            def Shader "CastSwizzleFromInvertColors_OutNode_5237ae5963fa42938c49854cd99f24deToSR_Adjustmentcolor"
            {
                uniform token info:id = "ND_swizzle_vector4_color3"
                float4 inputs:in.connect = </MaterialX/Materials/USD_Adjustment/InvertColors_OutNode_5237ae5963fa42938c49854cd99f24de.outputs:out>
                string inputs:channels = "xyz"
                color3f outputs:out
            }

            def Shader "InvertColors_OutNode_5237ae5963fa42938c49854cd99f24de"
            {
                uniform token info:id = "ND_absval_vector4"
                float4 inputs:in.connect = </MaterialX/Materials/USD_Adjustment/InvertColors_Out_inNode_5237ae5963fa42938c49854cd99f24de.outputs:out>
                float4 outputs:out
            }

            def Shader "InvertColors_Out_inNode_5237ae5963fa42938c49854cd99f24de"
            {
                uniform token info:id = "ND_subtract_vector4"
                float4 inputs:in1 = (1, 1, 1, 0)
                float4 inputs:in2.connect = </MaterialX/Materials/USD_Adjustment/InvertColors_InNode_5237ae5963fa42938c49854cd99f24de.outputs:out>
                float4 outputs:out
            }

            def Shader "InvertColors_InNode_5237ae5963fa42938c49854cd99f24de"
            {
                uniform token info:id = "ND_dot_vector4"
                float4 inputs:in.connect = </MaterialX/Materials/USD_Adjustment/CastSwizzleFromColorNode_57fe4d80a31b47a9b6c2d6e5656f9121ToInvertColors_InNode_5237ae5963fa42938c49854cd99f24dein.outputs:out>
                float4 outputs:out
            }

            def Shader "CastSwizzleFromColorNode_57fe4d80a31b47a9b6c2d6e5656f9121ToInvertColors_InNode_5237ae5963fa42938c49854cd99f24dein"
            {
                uniform token info:id = "ND_swizzle_color4_vector4"
                color4f inputs:in.connect = </MaterialX/Materials/USD_Adjustment/ColorNode_57fe4d80a31b47a9b6c2d6e5656f9121.outputs:out>
                string inputs:channels = "rgba"
                float4 outputs:out
            }

            def Shader "ColorNode_57fe4d80a31b47a9b6c2d6e5656f9121"
            {
                uniform token info:id = "ND_constant_color4"
                color4f inputs:value = (0, 1, 1, 1)
                color4f outputs:out
            }
        }
    }
}
