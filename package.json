{
  "name": "com.unity.polyspatial",
  "displayName": "PolySpatial",
  "version": "0.7.1",
  "unity": "2022.3",
  "unityRelease": "15f1",
  "description": "The Unity PolySpatial runtime includes platform-agnostic code required to build and deploy apps for supported platforms.\nUnity PolySpatial and visionOS support is only available to Unity Pro, Unity Enterprise, and Unity Industry users. Learn more about these plans at unity.com/pricing.",
  "dependencies": {
    "com.unity.nuget.newtonsoft-json": "3.0.2",
    "com.unity.render-pipelines.universal": "14.0.1",
    "com.unity.collections": "2.1.4",
    "com.unity.textmeshpro": "3.0.6",
    "com.unity.xr.core-utils": "2.4.0-exp.3",
    "com.unity.ext.flatsharp": "0.10.1",
    "com.unity.modules.particlesystem": "1.0.0",
    "com.unity.inputsystem": "1.4.4",
    "com.unity.modules.video": "1.0.0",
    "com.unity.ugui": "1.0.0"
  },
  "versionDefines": [],
  "upm": {
    "changelog": ""
  },
  "_upm": {
    "changelog": "### Added\n- Added PolySpatial Environment Radiance shader graph node.\n- Added support for more shader graph nodes: Blackbody, Dielectric Specular, Checkerboard, Rounded Polygon, Rounded Rectangle, and Ambient.\n- Added \"Unseparated\" option for PolySpatial Sorting Group depth pass property.\n- Explicitly present the dimensions of output volume configurations as meters.\n- Added support for bold text in Text Mesh Pro components.\n- Added a list of available devices in your network to the **Play To Device** window (menu **Window > PolySpatial > Play To Device**). You can select the desired device to connect or add direct connections. \n- Added PolySpatial Image Based Light/Image Based Light Receiver components.\n- Added support for blended tilesheet animations for BakeToMesh Particle Systems.\n- Added support for custom user assigned font for PolySpatialTextComponent.\n- Added backup implementation for Text Component to support macOS and iOS.\n- Added support for Emission map and color for unlit URP particle shader.\n- Added additional documentation for RenderTexture usage.\n- Added documentation for shader graph properties and targets.\n- Added 10 volume camera configurations to PlayToDevice project. If a connecting app requests a camera configuration that is not available, it will be rerouted based on cubic volume and aspect ratio. \n- Volume Cameras now have opened/closed/resized/focused events that code can respond to.\n- Volume Cameras can have their volumetric windows explicitly opened and closed.\n\n### Changed\n- Renamed VolumeCameraConfiguration to VolumeCameraWindowConfiguration\n- All packages now require 2022.3.15f1 and later (rather than 2022.3.11f1 and later) to pick up fixes for various memory leaks made in 15f1.\n\n### Deprecated\n\n### Removed\n- Support for Unity versions earlier than 2022.3.11f1.\n\n### Fixed\n- Fixed issue with opaque shader graphs not being rendered before transparent ones.\n- Fixed issue with shader graph view space positions/normals/tangents/bitangents being read in vertex stage.\n- Fixed issue with shader graphs sampling vertex colors in meshes that lack explicit ones.\n- Fixed issue with clipped UI elements (such as scroll view contents) with non-identity rotations.\n- Fixed issue with Lit shaders being generated when material type set to Unlit.\n- Fixed ArgumentNullException when using non-directional lightmaps.\n- Fix for visual discontinuities when updating meshes/textures.\n- Fixed issue with \"Fix This Object\" button in the Inspector view throwing errors.\n- Fixed issue with `VolumeCamera` scene handles being drawn in the wrong position when not in the origin.\n- Fixed issue with input and UI objects when outside the viewable area of the main camera.\n- Fixed performance regression related to light and reflection probe tracking.\n- Fixed issue with persisting Particle Systems GameObject post-deletion.\n- Fixed issue with wrapping on 3D textures sampled in clamp mode in shader graphs.\n- Fixed issue with VolumeToWorld transform being overwritten when keywords/globals were changed.\n- Fixed warnings from shader graph imports in URP package.\n- Fixed issue with standard shaders (e.g. URP/Lit, URP/Unlit) using alpha-to-coverage when semi-transparent.\n- Fixed Recording & Playback framerate limiting using built-in framerate controls\n- Fixed issue with PolySpatialSortingGroup items not being sorted correctly if their activation state changes.\n- Fixed crash on disabling GameObjects containing particle systems.\n- Fixed color space issue with HDR shader graph properties.\n\n### Security"
  },
  "upmCi": {
    "footprint": "a8a37e6a1d8a5c14e2f4bad43d764d764bc170ee"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.polyspatial@0.7/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/quantum.git",
    "type": "git",
    "revision": "9380fa90b9beccee80c464f367b54c02c71c3642"
  },
  "samples": [
    {
      "displayName": "Play to Device Input Settings",
      "description": "A settings asset for the input system package which enables input to come from the Play to Device host app when the Editor is not in the foreground. If you already have a settings asset in your project, set Background Behavior to Ignore Focus, and Play Mode Input Behavior to All Device Input Always Goes To Game View",
      "path": "Samples~/InputSettings"
    },
    {
      "displayName": "Unity PolySpatial Samples",
      "description": "A set of samples for content targeting PolySpatial-based platforms.",
      "path": "Samples~/PolySpatialSamples"
    }
  ]
}
